{"version":3,"sources":["utils/validation.js","styles/login.module.css","styles/header.module.css","styles/card.module.css","styles/message.module.css","styles/lostPage.module.css","styles/home.module.css","styles/snedMessage.module.css","styles/contact.module.css","styles/cards.module.css","styles/footer.module.css","styles/menu.module.css","components/404page.jsx","components/card.jsx","components/cards.jsx","components/footer.jsx","context/menucontext.js","components/menu.jsx","components/header.jsx","components/layout.jsx","utils/body.js","containers/home.jsx","store/action/actionType.js","store/action/authCreator.js","containers/login.jsx","containers/register.jsx","components/userMessageCard.jsx","components/userMessageCards.jsx","store/action/message.js","containers/message.jsx","store/action/sendMessage.js","containers/sendMessage.jsx","components/contact.jsx","App.js","reportWebVitals.js","store/reducer/auth.js","store/reducer/message.js","store/reducer/sendMessage.js","index.js"],"names":["module","exports","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","LostPage","push","useHistory","className","classes","container","style","border","backgroundColor","color","onClick","reg","Card","heading","description","p","fontSize","d","Cards","data","map","datum","title","Date","getTime","Footer","href","target","getFullYear","menuContext","createContext","opened","openAction","withRouter","zIndex","menuItem","Header","useContext","MenuContext","main","marginLeft","icon","menu","Layout","children","overflowX","display","flexDirection","alignItems","justifyContent","body","Home","useState","setMenu","Provider","content","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","MESSAGE_INIT","MESSAGE_FETCH_SUCCESS","MESSAGE_FETCH_FAIL","MESSAGE_SEND_START","MESSAGE_SEND_SUCCESS","MESSAGE_SEND_FAIL","LOGOUT","AUTO_SIGN","authFail","type","actionType","authSuccess","payload","loginFail","error","loginSuccess","logout","localStorage","removeItem","countDown","time","dispatch","setTimeout","load","a","axios","post","response","token","headers","id","user","_id","expiresIn","console","log","expiryDate","setItem","message","onLogin","login","auth","register","autoLogin","getItem","dateInSeconds","timeLeft","autoSign","connect","state","loading","loggedIn","enabled","setEnabled","useReducer","event","validity","checkValidity","valid","email","emailDispatch","password","passwordDispatch","buttonChangeHandler","extracted","onSubmit","preventDefault","tosend","form","placeholder","onChange","disabled","onAuth","toSend","fontWeight","UserMessageCard","createdAt","margin","padding","borderRadius","toDateString","textAlign","UserMessageCards","date","fetchFail","fetchSuccess","get","messages","fetch","fetchMessage","mesg","userId","onFetch","printed","setPrinted","copied","setCopied","useEffect","innercontainer","url","navigator","clipboard","writeText","sendFail","sendSuccess","send","sendHelper","sent","onSend","match","input","setInput","params","htmlFor","name","cols","rows","toSet","marginBottom","to","Contact","mini","path","exact","component","SendMessages","Messages","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","sendReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducer","combineReducers","authReducer","messageReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef129eb3.chunk.js","sourcesContent":["\r\n\r\nmodule.exports = function (value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__2QG_5\",\"container\":\"login_container__3ib2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"header_main__b5XwQ\",\"container\":\"header_container__17BDy\",\"icon\":\"header_icon__3PuGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__2zhxg\",\"d\":\"card_d__2PO5Q\",\"p\":\"card_p__1Ds3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"message_main__1lt7H\",\"container\":\"message_container__29Y25\",\"innercontainer\":\"message_innercontainer__kqIrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lostPage_container__crrRZ\",\"reg\":\"lostPage_reg__2zD64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__3kszh\",\"container\":\"home_container__y1NaV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"snedMessage_main__3jeSX\",\"container\":\"snedMessage_container__xVe1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"contact_container__V_iTG\",\"mini\":\"contact_mini__9-bjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__3_yv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__262pv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"menu_container__1mBQK\"};","import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../styles/lostPage.module.css';\r\n\r\nfunction LostPage () {\r\n    const { push } = useHistory();\r\n\r\n    const buttonClickHandler = () => {\r\n        push('/');\r\n    }\r\n\r\n    const registerClickHandler = () => {\r\n        push('/register');\r\n    }\r\n\r\n    return (\r\n        <div  className={ classes.container }>\r\n            <div>\r\n                <div>You seem lost in our domain, click the buttom to go home.</div>\r\n                <button\r\n                    style={{ border: '2px solid white', backgroundColor: 'rgb(214, 6, 214)', color: 'white' }}\r\n                    onClick = { buttonClickHandler }\r\n                >home</button>\r\n                <button\r\n                    className={ classes.reg }\r\n                    onClick={ registerClickHandler }\r\n                >register</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LostPage;","import classes from '../styles/card.module.css';\r\nimport { FiCheck } from 'react-icons/fi';\r\n\r\nfunction Card ({ heading, description }) {\r\n    return (\r\n        <div className={ classes.container }>\r\n            <div className={ classes.p }>\r\n                <FiCheck       \r\n                    color='white' \r\n                    fontSize=\"40px\"\r\n                />\r\n            </div>\r\n            <h4>{ heading }</h4>\r\n            <div className={ classes.d }>{ description }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"./card\"\r\nimport classes from '../styles/cards.module.css'\r\n\r\nfunction Cards ({ data }) {\r\n    return (\r\n        <div className={ classes.container }>\r\n            {\r\n                data.map(datum => {\r\n                    return <Card\r\n                        key = { datum.title + ( new Date()).getTime() }\r\n                        description = { datum.description }\r\n                        heading = { datum.title }\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import classes from '../styles/footer.module.css';\r\nimport { FaGithub, FaTwitterSquare, FaPhoneSquare, FaCopyright, FaHeart } from 'react-icons/fa';\r\nimport { MdEmail } from 'react-icons/md';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className={ classes.container }>\r\n            <div>Made with love <FaHeart color='red' fontSize='20px'/> by Tomiwa</div>\r\n            <div>\r\n                <p>Contacts</p>\r\n                <ul>\r\n                    <li><FaPhoneSquare color='yellow' fontSize='30px'/> +2349034119761</li>\r\n                    <li>\r\n                        <a href='https://github.com/Dark-Vinci' target='blank'>\r\n                            <FaGithub color='white' fontSize='30px'/>\r\n                        </a>{ '  ' }\r\n                        github\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://mail.google.com/mail/u/?authuser=ademolaolutomiwa4real@gmail.com\" target='blank'>\r\n                            <MdEmail color='aqua' fontSize='30px'/>\r\n                        </a>{ '  ' }\r\n                        email\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://twitter.com/Tomiwa92699291\" target='blank'>\r\n                            <FaTwitterSquare color='blue' fontSize='30px'/>\r\n                        </a> { '  ' }\r\n                        twitter\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>copyright <FaCopyright /> { (new Date()).getFullYear() }- tomiwa tech</div>\r\n            <div>Shout out to Momoh Philip</div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { createContext } from 'react';\r\n\r\nconst menuContext = createContext({ opened: false, openAction: () => {} });\r\n\r\nexport default menuContext;","import { useHistory, withRouter } from 'react-router-dom';\r\n\r\nimport classes from '../styles/menu.module.css';\r\n\r\nfunction Menu () {\r\n    const menuItems = ['Home', 'Contact', 'Register', 'Login'];\r\n    const { push } = useHistory();\r\n\r\n    // function that help to change the url with the name of the nav object\r\n    const clickHandler = (location) => {\r\n        push(location);\r\n    }\r\n\r\n    return (\r\n        <nav className={ classes.container } style={{ zIndex: 200 }}>\r\n            <ul>\r\n                { menuItems.map(menuItem => {\r\n                    return (<li\r\n                        onClick = { () => clickHandler(menuItem) }\r\n                        key = { menuItem }\r\n                    >\r\n                        { menuItem }\r\n                    </li>);\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Menu);","import { useContext } from 'react';\r\n\r\nimport MenuContext from '../context/menucontext';\r\nimport Menu from \"./menu\";\r\nimport classes from '../styles/header.module.css';\r\n\r\nfunction Header () {\r\n    const { opened, openAction } = useContext(MenuContext);\r\n\r\n    return (\r\n        <div className={ classes.main }>\r\n            <div className={ classes.container }>\r\n                <h2\r\n                    style={{ marginLeft: '20px' }}\r\n                >AnonText</h2>\r\n                <div\r\n                    className={ classes.icon }\r\n                    onClick={ openAction }\r\n                >\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n            <div className={ classes.menu }>  \r\n                { opened && <Menu /> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import Footer from \"./footer\";\r\nimport Header from \"./header\";\r\n\r\n\r\nfunction Layout ({ children }) {\r\n    return (\r\n        <div style={{ overflowX: 'hidden',\r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }}>\r\n            <Header />\r\n            { children }\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","\r\n\r\nfunction body () {\r\n    return [\r\n        { \r\n            description: 'If theres is anything that you need help with related to our anonymous messaging platform, we are always here for you. 24 hours a day, 7 days a week', \r\n            title: '24/7 Support' \r\n        },\r\n        { \r\n            description: 'We are constantly working on AnonText as a platform to make it user friendly as possible. As of now, you can only use the web application, fill in your email & pass to get started', \r\n            title: 'Easy to use' \r\n        },\r\n        { \r\n            description: 'Our platform ensures your privacy so that you stay anonymous anytime you send someone a secret message. You are anonymous until you ever choose to stay otherwise', \r\n            title: 'Anonymity' \r\n        },\r\n        { \r\n            description: 'Safety of our users using the anonymous messaging platform is very import for us. we have reporting system so that you can report anything you do not like to see', \r\n            title: 'Safe and secure' \r\n        },\r\n    ]\r\n}\r\n\r\nexport default body;","import { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport classes from '../styles/home.module.css';\r\nimport Cards from \"../components/cards\";\r\nimport Layout from \"../components/layout\";\r\nimport content from '../utils/body';\r\nimport MenuContext from '../context/menucontext';\r\n\r\nfunction Home () {\r\n    const { push } = useHistory();\r\n    const [ menu, setMenu ] = useState(false);\r\n\r\n    // handler for opening and cloding the menu bar\r\n    const menuClickHandler = () => {\r\n        setMenu(!menu)\r\n    }\r\n\r\n    // function that handle the register button, it pushes the register page\r\n    // for the user to register into the app and get started\r\n    const startButtonHandler = () => {\r\n        push('/register');\r\n    }\r\n    return (\r\n        <MenuContext.Provider value={{ opened: menu, openAction: menuClickHandler }}>\r\n            <div className={ classes.main }>\r\n                <Layout>\r\n                    <div className={ classes.container }>\r\n                        <header>\r\n                            <h3>Send secrete anonymous messages online</h3>\r\n                            <div>\r\n                                AnonText is an interactive anonymous messaging\r\n                                website with a dare game. Create your Profile Link\r\n                                and send it to all your contacts to check what your \r\n                                friends think about you. With AnonText, you can \r\n                                send and recieve anonymous compliments easily for free\r\n                            </div>\r\n                            <button\r\n                                onClick={ startButtonHandler }\r\n                            >start now</button>\r\n                        </header>\r\n\r\n                        <main>\r\n                            <h3>Why use AnonText?</h3>\r\n                            <div>\r\n                                Our Anonymous messaging website comes with alot of\r\n                                great features.Here we are going to list a few of them. Have a look.\r\n                            </div>\r\n                            <Cards \r\n                                data = { content() }\r\n                            />\r\n                        </main>\r\n\r\n                        <main>\r\n                            <h3>App screenshots</h3>\r\n                            <div>\r\n                                Out of all other Anonymous Messaging and Anonymous feedback apps \r\n                                our User Interface is much easier to use.\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </Layout>\r\n            </div>\r\n        </MenuContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Home;","// export const REGISTER = 'REGISTER';\r\nexport const REGISTER_START = \"REGISTER_START\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const MESSAGE_INIT = \"MESSAGE_INIT\";\r\nexport const MESSAGE_FETCH_SUCCESS = \"MESSAGE_FETCH_SUCCESS\";\r\nexport const MESSAGE_FETCH_FAIL = \"MESSAGE_FETCH_FAIL\";\r\n\r\nexport const MESSAGE_SEND_START = \"MESSAGE_SEND_START\";\r\nexport const MESSAGE_SEND_SUCCESS = \"MESSAGE_SEND_SUCCESS\";\r\nexport const MESSAGE_SEND_FAIL = \"MESSAGE_SEND_FAIL\";\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTO_SIGN = 'AUTO_SIGN';","import * as actionType from './actionType';\r\nimport axios from 'axios';\r\n\r\n// action creator for starting registration\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionType.REGISTER_START\r\n    }\r\n}\r\n\r\n// action creator for failed registration\r\nexport const authFail = () => {\r\n    return {\r\n        type: actionType.REGISTER_FAIL\r\n    }\r\n}\r\n\r\n// action creator for successful registration\r\nexport const authSuccess = (payload) => {\r\n    return {\r\n        type: actionType.REGISTER_SUCCESS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n// action creator for starting loging in\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionType.LOGIN_START\r\n    }\r\n}\r\n\r\n// action creator for failed login\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionType.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n// action creator for successful login\r\nexport const loginSuccess = (payload) => {\r\n    return {\r\n        type: actionType.LOGIN_SUCCESS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n// action creator for signing in automatically\r\nexport const autoSign = (payload) => {\r\n    return {\r\n        type: actionType.AUTO_SIGN,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n// action creator for logging users out\r\nexport const logout = () => {\r\n    // remove the id, token and exipration date from local storage\r\n    localStorage.removeItem('id');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiryDate');\r\n\r\n    return {\r\n        type: actionType.LOGOUT\r\n    }\r\n}\r\n\r\n// expiry logout timout dispatcher\r\n// export const countDown = (time) => {\r\n//     console.log('time', time);\r\n//     // console.log(dispatch);\r\n//     const realTime = time * 1000\r\n\r\n//     return dispatch => {\r\n//         setTimeout(() => {\r\n//             console.log('here')\r\n//             dispatch(logout());\r\n//         }, realTime);\r\n//     }\r\n// }\r\n\r\nexport const countDown = (time) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, time * 1000000);\r\n    }\r\n}\r\n\r\n// asynchrous registration function helper\r\nasync function register (load, dispatch, push) {\r\n    try {\r\n        // post to the server\r\n        // const response = await axios.post('http://localhost:2020/api/register', load);\r\n\r\n         // !here we go\r\n        const response = await axios.post(`https://proj-ano-tex-v1w9.herokuapp.com/api/register`, load);\r\n\r\n        // set token, id and expiration date\r\n        const token = response.headers['x-auth-token'];\r\n        const id = response.data.user._id;\r\n        const expiresIn = +response.data.expiresIn;\r\n\r\n        console.log(expiresIn);\r\n        // console.log(id)\r\n\r\n        // calculate the expiration date in milliseconds\r\n        const expiryDate = (new Date()).getTime() + expiresIn * 1000;\r\n\r\n        const payload = { id, token }\r\n\r\n        // store id, token, exipration date in local storage\r\n        localStorage.setItem('id', id);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expiryDate', expiryDate);\r\n\r\n        // dispatch authenication success and logout countdown\r\n        dispatch(authSuccess(payload));\r\n        // dispatch(countDown(expiresIn));\r\n\r\n        // redirect to /my-messages\r\n        push('/my-messages');\r\n    } catch (ex) {\r\n        // dispatch failure to register\r\n        dispatch(authFail());\r\n    }\r\n}\r\n\r\nasync function login (load, dispatch, push) {\r\n    try {\r\n        // post login request to the server\r\n        // const response = await axios.post('http://localhost:2020/api/login', load);\r\n\r\n        // !here we go\r\n        const response = await axios.post(`https://proj-ano-tex-v1w9.herokuapp.com/api/login`, load);\r\n\r\n        // set token, id, expiresIn\r\n        const token = response.headers['x-auth-token'];\r\n        const id = response.data.user._id;\r\n        const expiresIn = +response.data.expiresIn;\r\n\r\n        // set the expiration date in milliseconds\r\n        const expiryDate = (new Date()).getTime() + expiresIn * 1000;\r\n\r\nconsole.log('expires in', expiresIn);\r\n        // payload for successful login\r\n        const payload = { id, token }\r\n\r\n        // set the id, token and expirationdate in the local storage\r\n        localStorage.setItem('id', id);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expiryDate', expiryDate); \r\n\r\n        // dispatch login and countdown for logging out when token expires\r\n        dispatch(loginSuccess(payload));\r\n        dispatch(countDown(expiresIn));\r\n\r\n        push('/my-messages');\r\n    } catch (ex) {\r\n        // dispatch login failure\r\n        dispatch(loginFail(ex.message));\r\n    }\r\n}\r\n\r\n// dispatch login start and reaches out to the web with the login helper\r\nexport const onLogin = (payload, push) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n        login(payload, dispatch, push);\r\n    }\r\n}\r\n\r\n// dispatch register start and reaches out to the web with the register helper\r\nexport const auth = ( payload, push ) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        register(payload, dispatch, push);\r\n    }\r\n}\r\n\r\n// dispatch for auto logging in of the user when the site is visited\r\nexport const autoLogin = () => {\r\n    return dispatch => {\r\n        // get the token, id and expiry date from the loacl storage\r\n        const token = localStorage.getItem('token');\r\n        const id = localStorage.getItem('id');\r\n        const expiryDate = localStorage.getItem('expiryDate');\r\n        const dateInSeconds = +expiryDate\r\n\r\n        if (!token || !id) {\r\n            // dispatch logout if theres is no token or id in the localstorage\r\n            console.log('if1')\r\n            dispatch(logout());\r\n        } else {\r\n            if (dateInSeconds < (new Date().getTime())) {\r\n                // dispatch logout if the token has expired\r\n                console.log('if2')\r\n                dispatch(logout());\r\n            } else {\r\n                // get the time left in milliseconds\r\n                const timeLeft = dateInSeconds - (new Date().getTime());\r\n                console.log('if3')\r\n\r\n                const payload = { id, token }\r\n\r\n                // dispatch autoSignIn and logout countdown timer \r\n                dispatch(autoSign(payload));\r\n                dispatch(countDown(timeLeft / 1000));\r\n            }\r\n        }\r\n    }\r\n}","import { useState, useReducer } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport checkValidity from '../utils/validation';\r\nimport Footer from \"../components/footer\";\r\nimport classes from '../styles/login.module.css';\r\nimport { onLogin } from '../store/action/authCreator';\r\n\r\n\r\n// , loading, error, loggedIn \r\nfunction Login ({ login }) {\r\n    const [ enabled, setEnabled ] = useState(false);\r\n    const { push } = useHistory();\r\n\r\n    // email change reucer function\r\n    const emailReducer = ( state, event ) => {\r\n        // requirement for a valid email input\r\n        const rules = {\r\n            required: true,\r\n            isEmail: true\r\n        }\r\n\r\n        // check if the email input is valid\r\n        const validity = checkValidity(event.target.value, rules);\r\n\r\n        return {\r\n            ...state,\r\n            value: event.target.value,\r\n            valid: validity\r\n        }\r\n    }\r\n\r\n    // password change reducer\r\n    const passwordReducer = ( state, event ) => {\r\n        // requirement for a valid password\r\n        const rules = {\r\n            required: true,\r\n            minLength: 6,\r\n            maxLength: 30\r\n        }\r\n\r\n        // check if the input is valid\r\n        const validity = checkValidity(event.target.value, rules);\r\n\r\n        return {\r\n            ...state,\r\n            value: event.target.value,\r\n            valid: validity\r\n        }\r\n    }\r\n\r\n    // setting the email and password reducer with useReducer\r\n    const [ email, emailDispatch ] = useReducer(emailReducer, { value: '', valid: false });\r\n    const [ password, passwordDispatch ] = useReducer(passwordReducer, { value: '', valid: false });\r\n\r\n    // function that checks is the button should be enabled\r\n    const buttonChangeHandler = () => {\r\n        const extracted = email.valid && password.valid;\r\n        setEnabled(extracted);\r\n    }\r\n\r\n    // function that is called when the forms submit button is clicked\r\n    const onSubmitFormHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        // data to be sent\r\n        const tosend = { email: email.value, password: password.value }\r\n\r\n        // send to backend, push is also passed so that when the login \r\n        // is successful, the user should be redirected to messages page\r\n        login(tosend, push);\r\n    }\r\n\r\n    // handler for redirecting the user to the register page\r\n    const registerButtonHandler = () => {\r\n        push('/register');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={ classes.container }>\r\n                <h3>Login</h3>\r\n                <div>\r\n                    Recieve anonymous compliments from your friends,\r\n                    and send anonymous messages to your friend for free.\r\n                </div>\r\n\r\n                <form \r\n                    onSubmit={ onSubmitFormHandler }\r\n                    className={ classes.form }\r\n                >\r\n                    <div>\r\n                        {/* <label>your email</label> */}\r\n                        <input \r\n                            type=\"email\" \r\n                            placeholder='email: johnDoe@gmail.com'\r\n                            value={ email.value }\r\n                            onChange= { (event) => {\r\n                                emailDispatch(event);\r\n                                buttonChangeHandler();\r\n                            } }\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {/* <label htmlFor=\"password\">your password</label> */}\r\n                        <input \r\n                            type=\"password\" \r\n                            value={ password.value }\r\n                            placeholder='Your password'\r\n                            onChange={ (event) => {\r\n                                passwordDispatch(event);\r\n                                buttonChangeHandler();\r\n                            } }\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={ !enabled }\r\n                    >login</button>\r\n                </form>\r\n\r\n                <div>Dont have an account? <button onClick={ registerButtonHandler }>register</button></div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\n// fucntion that helps to get needed slices of states from the store\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        loggedIn: state.auth.token !== ''\r\n    }\r\n}\r\n\r\n// function that help dispatch loging in of the user\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login : (payload, push) => dispatch(onLogin(payload, push))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { useReducer, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Footer from \"../components/footer\";\r\nimport checkValidity from '../utils/validation';\r\nimport classes from '../styles/login.module.css';\r\nimport {auth} from '../store/action/authCreator';\r\n\r\nfunction Register ({ onAuth, error }) {\r\n    const [ enabled, setEnabled ] = useState(false);\r\n    const { push } = useHistory();\r\n\r\n    // ruducer function for email states\r\n    const emailReducer = ( state, event ) => {\r\n        // defining rules for a valid email input\r\n        const rules = {\r\n            required: true,\r\n            isEmail: true\r\n        }\r\n\r\n        // checking the validity of the input\r\n        const validity = checkValidity(event.target.value, rules);\r\n\r\n        return {\r\n            ...state,\r\n            value: event.target.value,\r\n            valid: validity\r\n        }\r\n    }\r\n\r\n    // ruducer function for password states\r\n    const passwordReducer = ( state, event ) => {\r\n        // defining the rules for a valid password\r\n        const rules = {\r\n            required: true,\r\n            minLength: 6,\r\n            maxLength: 30\r\n        }\r\n\r\n        // checking the validity of the inut\r\n        const validity = checkValidity(event.target.value, rules);\r\n\r\n        return {\r\n            ...state,\r\n            value: event.target.value,\r\n            valid: validity\r\n        }\r\n    }\r\n    // connectinf the reducer function with the state using useReducer\r\n    const [ email, emailDispatch ] = useReducer(emailReducer, { value: '', valid: false });\r\n    const [ password, passwordDispatch ] = useReducer(passwordReducer, { value: '', valid: false });\r\n\r\n    // function for cheching if the register button should be enabled or not\r\n    const buttonChangeHandler = () => {\r\n        const extracted = email.valid && password.valid;\r\n        setEnabled(extracted);\r\n    }\r\n\r\n    // function that is called when the submit button in the form is clicked\r\n    const onSubmitFormHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        // data to be sent\r\n        const toSend = {\r\n            email: email.value,\r\n            password: password.value\r\n        }\r\n\r\n        // send the data to the backend withe the help if actio creatir and the store\r\n        onAuth(toSend, push);\r\n    }\r\n\r\n    // handler for changing the page to login page\r\n    const loginButtonHandler = () => {\r\n        push('/login');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={ classes.container }>\r\n                <h3>Register</h3>\r\n                <div>\r\n                    Recieve anonymous compliments from your friends, \r\n                    and send anonymous messages to your friend for free.\r\n                </div>\r\n\r\n                <form\r\n                    onSubmit={ onSubmitFormHandler }\r\n                    className={ classes.form }\r\n                >\r\n                    <div>\r\n                        { error && <p \r\n                                style={{ color: 'red', fontWeight: 'bold', fontSize: '23px' }}\r\n                            >something went wrong</p>\r\n                        }\r\n                        {/* <label htmlFor=\"email\">Email</label> */}\r\n                        <input \r\n                            type=\"email\" \r\n                            placeholder='johnDoe@gmail.com'\r\n                            value={ email.value }\r\n                            onChange= { (event) => {\r\n                                emailDispatch(event);\r\n                                buttonChangeHandler();\r\n                            } }\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {/* <label htmlFor=\"password\">Password</label> */}\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder='Your password'\r\n                            value={ password.value }\r\n                            onChange={ (event) => {\r\n                                passwordDispatch(event);\r\n                                buttonChangeHandler();\r\n                            } }\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={ !enabled }\r\n                    >Register</button>\r\n                </form>\r\n\r\n                <div>Have an account?<button onClick={ loginButtonHandler }>login</button></div>\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\n// function that map the needed slices of the states needed from the stores\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error\r\n    }\r\n} \r\n\r\n// function that help dispatch registering action in the store\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (payload, push) => {\r\n            return dispatch(auth(payload, push))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","\r\n\r\nfunction UserMessageCard ({ message, createdAt }) {\r\n    return (\r\n        <div style={{ \r\n            border: '2px solid white', \r\n            margin: '10px', padding: '10px', \r\n            borderRadius: '10px'\r\n        }}>\r\n            <div style={{ fontSize: '9px' }}>Created at <time>{ (new Date(createdAt)).toDateString() }</time></div>\r\n            <div\r\n                style={{ textAlign: 'left' }}\r\n            >{ message }</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMessageCard;  ","import UserMessageCard from \"./userMessageCard\";\r\n\r\nfunction UserMessageCards ({ data }) {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex', \r\n                flexDirection: 'column'\r\n            }}\r\n        >\r\n            { data.map(message => {\r\n                return <UserMessageCard \r\n                    createdAt={ message.date }\r\n                    message={ message.content }\r\n                    key={ message._id }\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMessageCards;","import * as actionType from './actionType';\r\nimport axios from 'axios';\r\n\r\n// action creator for the start of fetching a users message from server\r\nexport const fetchStart = () => {\r\n    return {\r\n        type: actionType.MESSAGE_INIT\r\n    }\r\n}\r\n\r\n// action creator for a failed message fetching\r\nexport const fetchFail = () => {\r\n    return {\r\n        type: actionType.MESSAGE_FETCH_FAIL\r\n    }\r\n}\r\n\r\n// action creator for successful fetch of users messages\r\nexport const fetchSuccess = (payload) => {\r\n    return {\r\n        type: actionType.MESSAGE_FETCH_SUCCESS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n\r\nasync function fetchMessage (dispatch, token) {\r\n    try {\r\n        // reach out to the web with axios\r\n        // const response = await axios.get('http://localhost:2020/api/user/my-messages', {\r\n        //     headers: { 'x-auth-token': token }\r\n        // }); \r\n\r\n        // ! here we go\r\n        // console.log(token);\r\n        const response = await axios.get(`https://proj-ano-tex-v1w9.herokuapp.com/api/user/my-messages`, {\r\n            headers: { 'x-auth-token': token }\r\n        });\r\n\r\n        // data transform\r\n        const messages = response.data.data;  \r\n        // success fetch dispatcher\r\n        dispatch(fetchSuccess(messages));\r\n    } catch (ex) {\r\n        // failed fetching of users messages\r\n        dispatch(fetchFail());\r\n    }\r\n}\r\n\r\n// main fetching function, dispatches fetch start and reaches to the web with the fetch helper\r\nexport const fetch = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        fetchMessage(dispatch, token);\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { AiFillMessage } from 'react-icons/ai';\r\n\r\nimport Layout from \"../components/layout\";\r\nimport UserMessageCards from \"../components/userMessageCards\";\r\nimport classes from '../styles/message.module.css';\r\nimport { fetch } from '../store/action/message';\r\n\r\n\r\nfunction Message ({ onFetch, token, messages, loading, error, userId }) {\r\n    const [ printed, setPrinted ] = useState(false);\r\n    const [ copied, setCopied ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onFetch(token);\r\n        setPrinted(true);\r\n    }, [token, onFetch]);   \r\n\r\n    const copyHandler = () => {\r\n        // generate the users message link\r\n        // const url = `http://localhost:3000/send-message/${ userId }`;\r\n\r\n        // !here we go \r\n        const url = `https://Dark-Vinci.github.io/anonymous-frontend/send-message/${ userId }`\r\n\r\n        // copy to clipboard\r\n        navigator.clipboard.writeText(url);\r\n\r\n        // to change from [copy] to [copied]\r\n        setCopied(true);\r\n    }\r\n\r\n    return (\r\n        <div className={ classes.main }>\r\n            <Layout>\r\n                <div className={ classes.container }>\r\n                    <div className={ classes.innercontainer }>\r\n                        <div>Message \r\n                            <AiFillMessage \r\n                                color='white'\r\n                                fontSize='60px'\r\n                        /></div>\r\n                        <div>\r\n                            {/* for generating link for users friends to send messages */}\r\n                            generate your anonymous link \r\n                            <button \r\n                                onClick={copyHandler}\r\n                                style={{ border: '1px solid white', margin: '3px', borderRadius: '5px' }}\r\n                            >{ copied ? 'copied': 'copy' }</button>\r\n                        </div>\r\n                        <div>\r\n                            Here are the anonymous message youve recieved over the course of registering\r\n                        </div>\r\n                        { \r\n                            loading ?\r\n                            // change the displayed message if there is an error or \r\n                            // data is still loading or data has been succesfully fetched\r\n                                <h3> loading... </h3> :\r\n                            error ?\r\n                                <h3 style={{ color: 'red' }}> something went wrong</h3> :\r\n                                printed && <div>\r\n                                    { \r\n                                        messages.length === 0 ?\r\n                                        // the user has no messages yet in the database\r\n                                        <div>No message yet</div> :\r\n                                        // users messages is one or more, the card of message would be displayed\r\n                                        <UserMessageCards \r\n                                            data = { messages }\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                                \r\n                            }\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// function that get the slice of the needed state from various stores\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        messages: state.mesg.messages,\r\n        loading: state.mesg.loading,\r\n        error: state.mesg.error,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\n// function that dispatch fetching of data in the store\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetch: (token) => dispatch(fetch(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);","import * as actionType from './actionType';\r\nimport axios from 'axios';\r\n\r\n// action creator for sending a user a message\r\nexport const sendStart = () => {\r\n    return {\r\n        type: actionType.MESSAGE_SEND_START\r\n    }\r\n}\r\n\r\n// action creator for failed sending message\r\nexport const sendFail = () => {\r\n    return {\r\n        type: actionType.MESSAGE_SEND_FAIL\r\n    }\r\n}\r\n\r\n// action creator for a successful sending of message\r\nexport const sendSuccess = () => {\r\n    return {\r\n        type: actionType.MESSAGE_SEND_SUCCESS\r\n    }\r\n}\r\n\r\n// aysnc function for sending the message, reaches out to the web with axios\r\nasync function sendHelper ( payload, dispatch ) {\r\n    try {\r\n        // sending the message\r\n        const message = { content: payload.message }\r\n        // await axios.post(`http://localhost:2020/api/user/send-message/${ payload.userId }`, message);\r\n\r\n        // ! here we go \r\n        const response = await axios.post(`https://proj-ano-tex-v1w9.herokuapp.com/api/user/send-message/${ payload.userId }`, message);\r\n\r\n        // successful sending\r\n        dispatch(sendSuccess());\r\n    } catch (ex) {\r\n        // failure in sending the message\r\n        dispatch(sendFail());\r\n    }\r\n}\r\n\r\n// main dispatcher for sending the message\r\nexport const send = (payload) => {\r\n    return dispatch => {\r\n        dispatch(sendStart());\r\n        sendHelper(payload, dispatch);\r\n    }\r\n}","import {  useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../components/layout';\r\nimport checkValidity from '../utils/validation';\r\nimport classes from '../styles/snedMessage.module.css';\r\nimport { send } from '../store/action/sendMessage';\r\n\r\nfunction SendMessages ({ onSend, sent, match, loading, error }) {\r\n    const [ enabled, setEnabled ] = useState(false);\r\n    const [ input, setInput ] = useState('');\r\n    const { push } = useHistory();\r\n\r\n    const inputChangeHandler = (event) => {\r\n        // seting the input value\r\n        setInput(event.target.value);\r\n\r\n        // checking if the input is valid\r\n        const toSet = checkValidity(\r\n            event.target.value, \r\n            { minLength: 2, required: true, maxLength: 250 }\r\n        );\r\n\r\n        setEnabled(toSet);\r\n    }\r\n\r\n    // function that is called when the form is submitted\r\n    const onSubmitFormHandler = (event) => {\r\n        event.preventDefault();\r\n        const toSend = { message: input, userId: match.params.userId };\r\n        \r\n        // empty the input element\r\n        setInput('');\r\n\r\n        onSend(toSend);\r\n    }\r\n\r\n    // function that direct user to the register page\r\n    const registerClickHandler = () => {\r\n        push('/register');\r\n    }\r\n\r\n    return (\r\n        match.params.userId ?\r\n        <div className={ classes.main }>\r\n            <Layout>\r\n                <div className={ classes.container }>\r\n                    <div>\r\n                        <h3>AnonText</h3>\r\n                    </div>\r\n                    { \r\n                        !sent ?\r\n                            // to check if the form has not been filled\r\n                            <form\r\n                                onSubmit={ onSubmitFormHandler }\r\n                            >\r\n                                <div>\r\n                                    <label htmlFor=\"\">Leave an anonymous message for {'user'}</label>\r\n                                    {/* checking for error to know the right message to display */}\r\n                                    { error ? <h3 style={{ color: 'red' }}>something went wrong</h3> : null }\r\n                                    <textarea \r\n                                        name=\"\" id=\"\" cols=\"30\" rows=\"8\"\r\n                                        placeholder='leave a message'\r\n                                        value={ input }\r\n                                        onChange={ inputChangeHandler }\r\n                                    >\r\n                                    </textarea>\r\n                                </div>\r\n                                <button\r\n                                    disabled={ !enabled }\r\n                                    style={{ marginBottom: '40px' }}\r\n                                >{ loading ? 'sending...': 'send'}</button>   \r\n                            </form> :\r\n\r\n                                // would be shown when the user submit a message, justo to make the user also register\r\n                            <div>\r\n                                <div>know what people also think about you anonymously?, click the buttom below to get started</div>\r\n                                <button\r\n                                    onClick={ registerClickHandler }\r\n                                >register</button>\r\n                            </div> \r\n                    }\r\n                </div>\r\n            </Layout>\r\n        </div> : \r\n        // to redirect the user to the home page if theres is no user id in the url\r\n        <Redirect to='/home' />\r\n    );\r\n}\r\n\r\n// function that maps the needed state to what we have in redux store\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        sent: state.send.sent,\r\n        loading: state.send.loading,\r\n        error: state.send.error\r\n    }\r\n}\r\n\r\n// function that maps the sending function to an action in the store\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        onSend: (payload) => dispatch(send(payload))\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(SendMessages);","import classes from '../styles/contact.module.css';\r\nimport { FaGithub, FaTwitterSquare } from 'react-icons/fa';\r\nimport { MdEmail } from 'react-icons/md';\r\n\r\nfunction Contact () {\r\n    return (\r\n        <div className={ classes.container }>\r\n            <div className={ classes.mini }>\r\n                <p>Reach us on the social media below[web]. follow, like and share our post</p>\r\n                <ul>\r\n                    <li>\r\n                        <a href='https://github.com/Dark-Vinci' target='blank'>\r\n                            <FaGithub color='white' fontSize='30px'/>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://mail.google.com/mail/u/?authuser=ademolaolutomiwa4real@gmail.com\" target='blank'>\r\n                            <MdEmail color='aqua' fontSize='30px'/>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://twitter.com/Tomiwa92699291\" target='blank'>\r\n                            <FaTwitterSquare color='blue' fontSize='30px'/>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport LostPage from './components/404page';\nimport Home from './containers/home';\nimport Login from './containers/login';\nimport Register from './containers/register';\nimport Messages from './containers/message';\nimport SendMessages from './containers/sendMessage';\nimport { autoLogin } from './store/action/authCreator';\nimport Contact from './components/contact';\n\n\nfunction App({ loggedIn, login }) {\n  // trying to autologin when the components has been printed in the dom\n\n  login();\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' exact>\n          <Home />\n        </Route>\n\n        <Route path='/register' exact>\n          <Register />\n        </Route>\n\n        <Route path='/login' exact>\n          <Login />\n        </Route>\n\n        <Route path='/send-message/:userId' component= { SendMessages } />\n\n        <Route path='/contact' exact>\n          <Contact />\n        </Route>\n\n        <Route path='/home' exact>\n          <Home />\n        </Route>\n\n        {\n          // to allow only logged in user to be redirected to \n          // their messages page when any unkown part of the url is visited\n\n           loggedIn ? \n            <Route path='/my-messages' component= { Messages } />: null\n        } \n      </Switch>\n\n        <Route>\n          <LostPage />\n        </Route>\n    </div>\n  );\n}\n\n// function that check if the user is logged in by comapring\n// if the auth token in the store is not an empty string\nconst mapStateToProps = (state) => {\n  return {  \n    loggedIn: state.auth.token !== ''\n  }\n}\n\n// function that help to dispatch auto login\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionType from '../action/actionType';\r\n\r\n// the initial state of the authentication reducer\r\nconst initialState = {\r\n    userId: '', \r\n    token: '', \r\n    error: false,\r\n    loading: false\r\n}\r\n\r\n// authentication reducer\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch(action.type) {\r\n        case actionType.REGISTER_START:\r\n            // registration starts\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                userId: ''\r\n            }\r\n\r\n        case actionType.REGISTER_FAIL:\r\n            // failed registration\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                userId: ''\r\n            }\r\n\r\n        case actionType.REGISTER_SUCCESS:\r\n            // successful registration\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                token: action.payload.token,\r\n                userId: action.payload.id\r\n            }\r\n        case actionType.LOGIN_START:\r\n            // login starts\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                userId: ''\r\n            }\r\n\r\n        case actionType.LOGIN_FAIL:\r\n            // failed loging in\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                userId: ''\r\n            }\r\n\r\n        case actionType.LOGIN_SUCCESS:\r\n            // successful user login\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userId: action.payload.id,\r\n                token: action.payload.token\r\n            }\r\n\r\n        case actionType.LOGOUT:\r\n            // loging a user out\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userId: '',\r\n                token: '', \r\n                error: false\r\n            }\r\n\r\n        case actionType.AUTO_SIGN:\r\n            // signing in automatically by browser\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userId: action.payload.id,\r\n                token: action.payload.token,\r\n                error: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionType from '../action/actionType';\r\n\r\n// initial state of users messages\r\nconst initialState = {\r\n    messages: null,\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\n// fetching users message reducer\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionType.MESSAGE_INIT: \r\n            // when the fetching starts\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false\r\n            }\r\n\r\n        case actionType.MESSAGE_FETCH_FAIL: \r\n            // theres an error in fetching data\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true\r\n            }\r\n\r\n        case actionType.MESSAGE_FETCH_SUCCESS: \r\n            // successful fetching of data\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                messages: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionType from '../action/actionType';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: false,\r\n    sent: false\r\n}\r\n\r\nconst sendReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionType.MESSAGE_SEND_START:\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                loading: true\r\n            }\r\n\r\n        case actionType.MESSAGE_SEND_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                sent: false\r\n            }\r\n\r\n        case actionType.MESSAGE_SEND_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                sent: true\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default sendReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport authReducer from './store/reducer/auth';\nimport messageReducer from './store/reducer/message';\nimport sendReducer from './store/reducer/sendMessage';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst combinedReducer = combineReducers({\n  auth: authReducer,\n  mesg: messageReducer,\n  send: sendReducer\n});\nconst store = createStore(combinedReducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/anonymous-frontend'>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render( app, document.getElementById('root') );\n\nreportWebVitals();\n"],"sourceRoot":""}